# Import the function for testing
>>> text_indentation = __import__('5-text_indentation').text_indentation

# Test with simple text and a colon
>>> text_indentation("Good morning: World")
Good morning:
<BLANKLINE>
World

# Test with a question mark and varied spacing
>>> text_indentation("Is it sunny  ? Yes, it is.")
Is it sunny  ?
<BLANKLINE>
Yes, it is.
<BLANKLINE>

# Test with a period and no trailing spaces
>>> text_indentation("Summer is here. Enjoy the sun.")
Summer is here.
<BLANKLINE>
Enjoy the sun.
<BLANKLINE>

# Test with multiple newlines and delimiters
>>> text_indentation("Breakfast: Eggs?\n\nLunch: Salad.")
Breakfast:
<BLANKLINE>
Eggs?
<BLANKLINE>
<BLANKLINE>
<BLANKLINE>
Lunch:
<BLANKLINE>
Salad.
<BLANKLINE>

# Test with only punctuation marks and spaces
>>> text_indentation("  .  :  ?  ")
  .
<BLANKLINE>
:
<BLANKLINE>
?
<BLANKLINE>

# Test with non-string input (number)
>>> text_indentation(2021)
Traceback (most recent call last):
    ...
TypeError: text must be a string

# Test with None as input
>>> text_indentation(None)
Traceback (most recent call last):
    ...
TypeError: text must be a string

# Test with an empty string
>>> text_indentation("")

# Test string with leading spaces
>>> text_indentation("    Discover New Places")
Discover New Places

# Test string with trailing spaces
>>> text_indentation("Explore now    ")
Explore now

# Test with a sequence of newlines
>>> text_indentation("\n\n\n")
<BLANKLINE>
<BLANKLINE>
<BLANKLINE>

# Test with just delimiters and no spaces
>>> text_indentation(".:?")
.
<BLANKLINE>
:
<BLANKLINE>
?
<BLANKLINE>

# Test with a boolean input
>>> text_indentation(True)
Traceback (most recent call last):
    ...
TypeError: text must be a string

# Test with mixed content and delimiters
>>> text_indentation("Travel: Far & Wide? Yes. It's rewarding.")
Travel:
<BLANKLINE>
Far & Wide?
<BLANKLINE>
Yes.
<BLANKLINE>
It's rewarding.
<BLANKLINE>
