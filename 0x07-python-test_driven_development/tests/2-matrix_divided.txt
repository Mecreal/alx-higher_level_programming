>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test with integers and a valid divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test with floats and a valid divisor
>>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
>>> matrix_divided(matrix, 2)
[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

# Test for TypeError with non-uniform row sizes
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test for TypeError with invalid matrix element (string)
>>> matrix = [[1, 2, "3"], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test for TypeError with invalid matrix element (list)
>>> matrix = [[1, 2, 3], [[4], 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test for TypeError with invalid divisor type (string)
>>> matrix_divided(matrix, "3")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test for TypeError with invalid divisor type (list)
>>> matrix_divided(matrix, [1])
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test for ZeroDivisionError with divisor equal to zero
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test with empty matrix
>>> matrix_divided([], 1)
[]

# Test with empty sublists in matrix
>>> matrix = [[], []]
>>> matrix_divided(matrix, 1)
[[], []]

# Test with a large divisor
>>> matrix = [[100, 200, 300], [400, 500, 600]]
>>> matrix_divided(matrix, 100)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

# Test with a negative divisor
>>> matrix_divided(matrix, -2)
[[-50.0, -100.0, -150.0], [-200.0, -250.0, -300.0]]

# Test with a single element in the matrix
>>> matrix = [[42]]
>>> matrix_divided(matrix, 2)
[[21.0]]
